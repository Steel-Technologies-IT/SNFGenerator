{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdewitt\\\\OneDrive - Steel Technologies\\\\Documents\\\\GitHub\\\\SNFGenerator\\\\frontend\\\\src\\\\ExcelUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExcelUploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      setTableData(res.data.table);\n    } catch (err) {\n      console.error('Upload failed', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableData[0] && Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelUploader, \"09UprgmxBmQvvw+Sf/E9WkPhR40=\");\n_c = ExcelUploader;\nexport default ExcelUploader;\nvar _c;\n$RefreshReg$(_c, \"ExcelUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ExcelUploader","_s","file","setFile","tableData","setTableData","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","table","err","console","error","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","Object","keys","map","key","row","idx","values","val","i","_c","$RefreshReg$"],"sources":["C:/Users/jdewitt/OneDrive - Steel Technologies/Documents/GitHub/SNFGenerator/frontend/src/ExcelUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ExcelUploader() {\r\n  const [file, setFile] = useState(null);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload', formData);\r\n      setTableData(res.data.table);\r\n    } catch (err) {\r\n      console.error('Upload failed', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            {tableData[0] && Object.keys(tableData[0]).map((key) => (\r\n              <th key={key}>{key}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, idx) => (\r\n            <tr key={idx}>\r\n              {Object.values(row).map((val, i) => (\r\n                <td key={i}>{val}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExcelUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}