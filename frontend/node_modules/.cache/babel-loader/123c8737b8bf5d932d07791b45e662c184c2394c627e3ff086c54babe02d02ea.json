{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdewitt\\\\OneDrive - Steel Technologies\\\\Documents\\\\GitHub\\\\SNFGenerator\\\\frontend\\\\src\\\\ExcelUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExcelUploader() {\n  _s();\n  const [layoutFile, setLayoutFile] = useState(null);\n  const [flatFile, setFlatFile] = useState(null);\n  const [parsedData, setParsedData] = useState([]);\n  const handleLayoutChange = e => {\n    setLayoutFile(e.target.files[0]);\n  };\n  const handleFlatFileChange = e => {\n    setFlatFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!layoutFile || !flatFile) {\n      alert('Please upload both layout and flat files.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('layout', layoutFile);\n    formData.append('flatfile', flatFile);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      console.log();\n      setParsedData(res.data.parsed);\n    } catch (err) {\n      console.error('Upload failed', err);\n      alert('Upload failed. Check console for details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Layout and Flat File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Layout File (.xlsx or .csv): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx,.xls,.csv\",\n        onChange: handleLayoutChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Flat File (.txt): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".txt\",\n        onChange: handleFlatFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload & Parse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), parsedData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(parsedData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: parsedData.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this))\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelUploader, \"/2JhQkVRrlx+9Kq+WIqwnuqKwvA=\");\n_c = ExcelUploader;\nexport default ExcelUploader;\nvar _c;\n$RefreshReg$(_c, \"ExcelUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ExcelUploader","_s","layoutFile","setLayoutFile","flatFile","setFlatFile","parsedData","setParsedData","handleLayoutChange","e","target","files","handleFlatFileChange","handleUpload","alert","formData","FormData","append","res","post","console","log","data","parsed","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","length","border","style","marginTop","Object","keys","map","key","row","idx","values","val","i","_c","$RefreshReg$"],"sources":["C:/Users/jdewitt/OneDrive - Steel Technologies/Documents/GitHub/SNFGenerator/frontend/src/ExcelUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ExcelUploader() {\r\n  const [layoutFile, setLayoutFile] = useState(null);\r\n  const [flatFile, setFlatFile] = useState(null);\r\n  const [parsedData, setParsedData] = useState([]);\r\n\r\n  const handleLayoutChange = (e) => {\r\n    setLayoutFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFlatFileChange = (e) => {\r\n    setFlatFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!layoutFile || !flatFile) {\r\n      alert('Please upload both layout and flat files.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('layout', layoutFile);\r\n    formData.append('flatfile', flatFile);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload', formData);\r\n      console.log()\r\n      setParsedData(res.data.parsed);\r\n    } catch (err) {\r\n      console.error('Upload failed', err);\r\n      alert('Upload failed. Check console for details.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Layout and Flat File</h2>\r\n      <div>\r\n        <label>Layout File (.xlsx or .csv): </label>\r\n        <input type=\"file\" accept=\".xlsx,.xls,.csv\" onChange={handleLayoutChange} />\r\n      </div>\r\n      <div>\r\n        <label>Flat File (.txt): </label>\r\n        <input type=\"file\" accept=\".txt\" onChange={handleFlatFileChange} />\r\n      </div>\r\n      <button onClick={handleUpload}>Upload & Parse</button>\r\n\r\n      {parsedData.length > 0 && (\r\n        <table border=\"1\" style={{ marginTop: '20px' }}>\r\n          <thead>\r\n            <tr>\r\n              {Object.keys(parsedData[0]).map((key) => (\r\n                <th key={key}>{key}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {parsedData.map((row, idx) => (\r\n              <tr key={idx}>\r\n                {Object.values(row).map((val, i) => (\r\n                  <td key={i}>{val}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExcelUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}